package exercises;

import com.google.common.base.Function;
import driverFactory.DriverFactory;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.FluentWait;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;
import java.util.Set;
import java.util.concurrent.TimeUnit;

public class SwitchCommands {

    private static WebDriver driver;


    /**
     * 1) Launch new Browser
     *
     * 2) Open URL “http://toolsqa.wpengine.com/automation-practice-switch-windows/”
     *
     * 3) Click on Button “Alert Box”, it will open a Pop Up Window generated by JavaScript
     *
     * 4) Switch to Alert window (Use ‘SwitchTo()Alert() command)
     *
     * 5) Close the Pop Up Window (Use Accept command)
     */

    public static void switchExercise2_1(String driverName) {
        getDriver(driverName);
        String url = "http://toolsqa.wpengine.com/automation-practice-switch-windows/";
        driver.get(url);

        /*FluentWait<WebDriver> wait = new FluentWait<>(driver);
        wait.pollingEvery(Duration.ofMillis(250));
        wait.withTimeout(Duration.ofMinutes(2));
        wait.ignoring(NoSuchElementException.class);
        Function<WebDriver, WebElement> function = wDriver -> {
            System.out.println("Checking element");
            WebElement alertBoxButton = driver.findElement(By.id("alert"));
            if(alertBoxButton != null) {
                System.out.println("Element found");
            }
            return alertBoxButton;
        };*/



        WebDriverWait wait = new WebDriverWait(driver, 25);
        WebElement alertBoxButton = wait.until(ExpectedConditions.elementToBeClickable(By.id("alert")));
        alertBoxButton.click();
        Alert alert = driver.switchTo().alert();
        sleep(1000);
        alert.accept();
        closeDriver();
    }

    public static void switchExercise2_2(String driverName) {
        getDriver(driverName);
        String url = "http://toolsqa.wpengine.com/automation-practice-switch-windows/";
        driver.get(url);
        driver.manage().window().maximize();
        //WebElement alertBoxButton = driver.findElement(By.id("alert"));
        WebElement alertBoxButton = driver.findElement(By.xpath("//*[@id=\"alert\"]"));

        ((JavascriptExecutor) driver).executeScript("arguments[0].click()", alertBoxButton);

        Alert alert = driver.switchTo().alert();
        alert.accept();
        /*if (alertBoxButton.isDisplayed() && alertBoxButton.isEnabled()) {
            System.out.println("i can click it");
            alertBoxButton.click();
            WebDriverWait wait = new WebDriverWait(driver, 25);
            Alert alert = wait.until(ExpectedConditions.alertIsPresent());
            //Alert alert = driver.switchTo().alert();
            sleep(1000);
            alert.accept();
        }else {
            System.out.println("Something failed");
        }*/
//        alertBoxButton.click();

        closeDriver();
    }


    /**
     * Launch new Browser
     *
     * 2) Open URL “http://toolsqa.wpengine.com/automation-practice-switch-windows/”
     *
     * 3) Get Window name (Use GetWindowHandle command)
     *
     * 4) Click on Button “New Message Window”, it will open a Pop Up Window
     *
     * 5) Get all the Windows name ( Use GetWindowHandles command)
     *
     * 6) Close the Pop Up Window (Use Switch Command to shift window)
     *
     */
    public static void switchExercise1(String driverName) {
        getDriver(driverName);
        String url = "http://toolsqa.wpengine.com/automation-practice-switch-windows/";
        driver.get(url);
        String windowName = driver.getWindowHandle();
        System.out.println(windowName);
        By how = By.xpath("//*[@id=\"content\"]/p[3]/button");
        WebElement button = driver.findElement(how);
        button.click();
        Set<String> allWindowsName = driver.getWindowHandles();
        System.out.println(allWindowsName);
        for (String handle: allWindowsName ) {
            System.out.println(handle);
            driver.switchTo().window(handle);
        }

        driver.close();
        driver.switchTo().window(windowName);
        closeDriver();
    }

    private static void getDriver(String driverName) {
        driver = DriverFactory.getDriver(driverName);
        driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
    }

    private static void closeDriver(){
        sleep(5000);
        driver.close();
        driver.quit();
    }

    private static void sleep(int millis) {
        try {
            Thread.sleep(millis);
        } catch (InterruptedException e){
            e.printStackTrace();
        }
    }

}
